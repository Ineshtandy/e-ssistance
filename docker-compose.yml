---
services:
  weaviate:
    command: ["--host","0.0.0.0","--port","8080","--scheme","http"]
    image: cr.weaviate.io/semitechnologies/weaviate:1.32.0
    ports:
    - 8080:8080
    - 50051:50051
    volumes:
    - weaviate_data:/var/lib/weaviate
    restart: on-failure:0
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      ENABLE_API_BASED_MODULES: 'true'
      CLUSTER_HOSTNAME: 'node1'
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/v1/.well-known/ready"]
      interval: 2s
      timeout: 1s
      retries: 60  

  api:
    build:
      context: .
      dockerfile: ./ext_explr/Dockerfile
    environment:
      # IMPORTANT: inside Compose, refer to the service name, not localhost
      WEAVIATE_URL: "http://weaviate:8080"
      FLASK_ENV: "development"
      GMAIL_CREDENTIALS_PATH: "/gmail_auth/credentials.json"
      GMAIL_TOKEN_PATH: "/gmail_auth/token.json"
    volumes:
      - ./src/gmail_auth:/gmail_auth
      - ./uploads:/app/doc_uploads
      - ./parsed_output:/app/parsed_output
      - ./rag_storage:/app/rag_storage
    ports:
      - "5050:5000"
    depends_on:
      weaviate:
        condition: service_healthy
    env_file:
      - ./.env

volumes:
  weaviate_data:
    external: true
    name: emailwriter_weaviate_data
...